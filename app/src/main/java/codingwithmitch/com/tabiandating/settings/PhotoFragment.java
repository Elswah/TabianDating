package codingwithmitch.com.tabiandating.settings;

import android.content.Intent;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.support.annotation.Nullable;
import android.support.v4.app.Fragment;
import android.support.v4.content.FileProvider;
import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import codingwithmitch.com.tabiandating.BuildConfig;
import codingwithmitch.com.tabiandating.R;
import codingwithmitch.com.tabiandating.util.Utils;


public class PhotoFragment extends Fragment {
    private static final String TAG = "PhotoFragment";
    private String mPhotoPath = null;	// Exact location of the Picture that'll be captured.
    private Uri mOutputUri = null;		// Content URI for the Image File to be generated by FileProvider.
    //constant
    private static final int CAMERA_REQUEST_CODE = 5090;
    private static final int NEW_PHOTO_REQUEST = 3567;

    //widgets



    @Nullable
    @Override
    public View onCreateView(final LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_photo, container, false);
        Log.d(TAG, "onCreateView: started.");

        //open the camera to take a picture
        Button btnLaunchCamera = (Button) view.findViewById(R.id.btnLaunchCamera);
        btnLaunchCamera.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Log.d(TAG, "onClick: attempting to launch camera.");
                openCamera();
            }
        });


        return view;
    }

    private void openCamera(){
        Intent cameraIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        File photoFile = null;	// The file where the Captured Pic will go
        try {
            photoFile = Utils.createImageFile();
        } catch (IOException e) {
            e.printStackTrace();
        }
        if (photoFile != null) {
            mPhotoPath = photoFile.getAbsolutePath();	// Save the path for future use
            mOutputUri = FileProvider.getUriForFile(getContext(),
                    BuildConfig.APPLICATION_ID + ".provider",
                    photoFile);
            cameraIntent.putExtra(MediaStore.EXTRA_OUTPUT, mOutputUri);
            startActivityForResult(cameraIntent, CAMERA_REQUEST_CODE);
            Log.i(TAG, "photo uri " + mOutputUri);
            Log.i(TAG, "photo path " + mPhotoPath);
        }

    }





    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);

        if(requestCode == CAMERA_REQUEST_CODE){
            Log.d(TAG, "onActivityResult: done taking a photo.");
            Log.d(TAG, "onActivityResult: output uri: " + mOutputUri);

            getActivity().setResult(NEW_PHOTO_REQUEST,
                        getActivity().getIntent().putExtra(getString(R.string.intent_new_camera_photo), mOutputUri.toString()));

            Utils.notifyGalleryAboutPic(getContext(), mPhotoPath); // Notify the Gallery about the Freshly Captured Pic

                getActivity().finish();  // finish all activity

        }
    }
}

































